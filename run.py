# -*- coding: utf-8 -*-
"""
__project_ = '代码'
__file_name__ = 'run.py'
__author__ = '十五'
__email__ = '564298339@qq.com'
__time__ = '2023/10/2 4:23'
"""
from time import time

import numpy as np

from algorithm import Skyline,Distribution,MaxRect
# from constant import *
# from visualizing.draw_plan import standard_draw_plan


def test_algo():
    data = np.array([0,350,90,1,350,90,2,346,60,3,346,60,4,346,60,5,346,60,6,346,60,7,400,100,8,400,100,9,400,90,10,400,90,11,400,90,12,400,90,13,400,90,14,400,90,15,400,80,16,398,372,17,398,258,18,398,160,19,398,160,20,396,326,21,396,247,22,396,247,23,396,247,24,782,362,25,779,364,26,778,422,27,774,362,28,774,362,29,774,362,30,774,362,31,773,391,32,773,360,33,773,360,34,773,360,35,773,360,36,308,110,37,308,110,38,308,110,39,308,70,40,308,70,41,308,70,42,308,70,43,308,70,44,308,70,45,350,90,46,350,90,47,350,90,48,350,90,49,346,60,50,346,60,51,346,60,52,346,60,53,346,60,54,400,100,55,400,100,56,400,90,57,400,90,58,400,90,59,400,90,60,400,90,61,400,90,62,400,80,63,398,372,64,398,258,65,398,160,66,398,160,67,396,326,68,396,247,69,396,247,70,396,247,71,782,362,72,779,364,73,778,422,74,774,362,75,774,362,76,774,362,77,774,362,78,773,391,79,773,360,80,773,360,81,773,360,82,773,360,83,350,90,84,350,90,85,346,60,86,346,60,87,346,60,88,346,60,89,346,60,90,400,100,91,400,100,92,400,90,93,400,90,94,400,90,95,400,90,96,400,90,97,400,90,98,400,90,99,400,90,100,350,90,101,350,90,102,346,60,103,346,60,104,346,60,105,346,60,106,346,60,107,400,100,108,400,100,109,400,90,110,400,90,111,400,90,112,400,90,113,400,90,114,400,90,115,400,80,116,398,372,117,398,258,118,398,160,119,398,160,120,396,326,121,396,247,122,396,247,123,396,247,124,782,362,125,779,364,126,778,422,127,774,362,128,774,362,129,774,362,130,774,362,131,773,391,132,773,360,133,773,360,134,773,360,135,773,360,136,308,110,137,308,110,138,308,110,139,308,70,140,308,70,141,308,70,142,308,70,143,308,70,144,308,70,145,350,90,146,350,90,147,350,90,148,350,90,149,346,60,150,346,60,151,346,60,152,346,60,153,346,60,154,400,100,155,400,100,156,400,90,157,400,90,158,400,90,159,400,90,160,400,90,161,400,90,162,400,80,163,398,372,164,398,258,165,398,160,166,398,160,167,396,326,168,396,247,169,396,247,170,396,247,171,782,362,172,779,364,173,778,422,174,774,362,175,774,362,176,774,362,177,774,362,178,773,391,179,773,360,180,773,360,181,773,360,182,773,360,183,350,90,184,350,90,185,346,60,186,346,60,187,346,60,188,346,60,189,346,60,190,400,100,191,400,100,192,400,90,193,400,90,194,400,90,195,400,90,196,400,90,197,400,90,198,400,90,199,400,90]).reshape(200,3)
    d = Skyline(data)
    # d.scoring_sys.parameters=param_sj_300_107
    # print(d.scoring_sys.parameters)
    d.run()
    print(d.avg_util_rate(),len(d.solution))
if __name__ == "__main__":
    test_algo()

    pass